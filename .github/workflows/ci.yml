name: Build & Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install distutils for node-gyp
        run: pip install setuptools
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Build
        run: npm install
      - name: Unit Tests
        run: ./node_modules/.bin/tree-sitter test
      - name: Crash Regression Tests
        shell: bash
        run: |
          ./node_modules/.bin/tree-sitter init-config
          ./node_modules/.bin/tree-sitter parse -q test/crash_regressions/QEDErrorRecovery.tla || (($? == 1))
          ./node_modules/.bin/tree-sitter parse -q test/crash_regressions/QEDErrorRecovery2.tla || (($? == 1))
      - name: Corpus Tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: .\test\run-corpus.ps1
      - name: Corpus Tests (Linux & macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: ./test/run-corpus.sh
      - name: Query File Tests
        shell: pwsh
        run: |
          $query_files = Get-ChildItem `
            -Path @(".\queries", ".\integrations") `
            -Filter "*.scm" `
            -Recurse
          $results = $query_files.FullName `
            |% { `
              Write-Host (Resolve-Path -Path $_ -Relative); `
              ./node_modules/.bin/tree-sitter query $_ ./test/examples/Highlight.tla | Out-Null; `
              $lastexitcode `
            }
          $failures = $results |? {$_ -ne 0}
          exit $failures.length
      - name: Generate parser code
        run: |
          ./node_modules/.bin/tree-sitter --version
          ./node_modules/.bin/tree-sitter generate
      - name: Renormalize line endings
        shell: bash
        run: |
          git status
          git add --renormalize .
      - name: List changes
        shell: bash
        run: |
          git status
          openssl dgst -sha256 src/parser.c
          git diff | wc
        # Command from https://stackoverflow.com/a/62768943/2852699
      - name: Check grammar/code sync
        shell: bash
        run: |
          diff_count=$(git status --porcelain=v1 2>/dev/null | wc -l)
          exit $diff_count
      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.6
      - name: Generate parser WASM
        run: npx tree-sitter build-wasm
      - name: Publish
        run: npm pack
      - name: Upload npm tarball.
        uses: actions/upload-artifact@v4
        with:
          name: tlaplus-tree-sitter-tlaplus-${{matrix.os}}.tgz
          path: '*.tgz'
          if-no-files-found: error